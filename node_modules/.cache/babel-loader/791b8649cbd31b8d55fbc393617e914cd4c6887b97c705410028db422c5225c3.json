{"ast":null,"code":"var _jsxFileName = \"/Users/lucasmiles/Desktop/Final1/complete-speech-ai-app/src/components/PracticeExercise.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Mic, CheckCircle, XCircle } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst exercises = {\n  1: {\n    title: 'S Sound Practice',\n    targetWords: ['Snake', 'Sun', 'Smile']\n  },\n  2: {\n    title: 'R Sound Practice',\n    targetWords: ['Rabbit', 'Red', 'Round']\n  },\n  3: {\n    title: 'Tongue Strengthening',\n    targetWords: ['Up', 'Down', 'Side']\n  },\n  4: {\n    title: 'Lip Closure Drill',\n    targetWords: ['Pa', 'Ba', 'Ma']\n  },\n  5: {\n    title: 'Breath Support Training',\n    targetWords: ['Ahh', 'Oh', 'Eee']\n  },\n  6: {\n    title: 'Ch Sound Practice',\n    targetWords: ['Chair', 'Cheese', 'Chalk']\n  },\n  7: {\n    title: 'Th Sound Clarity',\n    targetWords: ['This', 'Think']\n  },\n  8: {\n    title: 'Z Sound Emphasis',\n    targetWords: ['Zebra', 'Zoom', 'Buzz']\n  },\n  9: {\n    title: 'Sentence Repetition',\n    targetWords: ['I can see the sun.']\n  },\n  10: {\n    title: 'Minimal Pairs Drill',\n    targetWords: ['Bat', 'Pat', 'Cap', 'Cab']\n  }\n};\nconst PracticeExercise = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const exercise = exercises[id];\n  const [message, setMessage] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [accuracy, setAccuracy] = useState(null);\n  const [recordTime, setRecordTime] = useState(0);\n  const handleListen = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert('Speech recognition not supported in this browser.');\n      return;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.lang = 'en-US';\n    recognition.interimResults = false;\n    recognition.maxAlternatives = 1;\n\n    // Start time recording\n    const startTime = Date.now();\n    recognition.onstart = () => {\n      setIsRecording(true);\n      setMessage('');\n      setAccuracy(null);\n      setRecordTime(0);\n    };\n    recognition.onresult = async event => {\n      const transcript = event.results[0][0].transcript.toLowerCase();\n\n      // Ensure that the transcript is not empty or null\n      if (!transcript || transcript.trim().length === 0) {\n        setMessage('⚠️ No speech detected. Please try again.');\n        return;\n      }\n      try {\n        const res = await fetch('http://localhost:5001/chat', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            message: transcript\n          })\n        });\n        const data = await res.json();\n        const feedback = data.reply;\n        setMessage(feedback);\n\n        // Simple accuracy check: comparison of words (real implementation would involve more advanced logic)\n        const correct = exercise.targetWords.some(word => transcript.includes(word.toLowerCase()));\n        const percentage = correct ? 100 : 0; // Placeholder, you can improve this logic with NLP or other methods\n\n        setAccuracy(percentage);\n\n        // Speak feedback out loud (only if correct or try again)\n        const utter = new SpeechSynthesisUtterance(correct ? \"Correct pronunciation!\" : \"Try again.\");\n        utter.lang = 'en-US';\n        window.speechSynthesis.speak(utter);\n      } catch (err) {\n        console.error('AI error:', err);\n        setMessage('⚠️ Something went wrong. Please try again.');\n      }\n    };\n    recognition.onerror = event => {\n      setMessage('⚠️ Error occurred: ' + event.error);\n    };\n    recognition.onend = () => {\n      setIsRecording(false);\n      setRecordTime((Date.now() - startTime) / 1000); // Calculate total recording time\n    };\n    recognition.start();\n  };\n  const handleStop = () => {\n    setIsRecording(false);\n    setMessage('Recording stopped.');\n  };\n  if (!exercise) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-center text-red-500 mt-10\",\n    children: \"Exercise not found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 min-h-[calc(100vh-64px)] flex items-center justify-center px-4 py-10\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-10 rounded-3xl shadow-lg w-full max-w-2xl text-center space-y-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-bold text-blue-600\",\n        children: exercise.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700 text-lg\",\n        children: \"Try saying one of the following words:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap justify-center gap-4\",\n        children: exercise.targetWords.map((word, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"bg-yellow-100 text-yellow-800 px-5 py-2 rounded-full text-base font-medium\",\n          children: word\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleListen,\n          disabled: isRecording || isListening,\n          className: \"flex items-center gap-2 bg-blue-600 text-white px-6 py-3 rounded-xl hover:bg-blue-700 transition text-base font-medium\",\n          children: [/*#__PURE__*/_jsxDEV(Mic, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), isRecording ? 'Recording...' : 'Start Speaking']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), isRecording && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStop,\n          className: \"bg-red-600 text-white px-6 py-3 rounded-xl hover:bg-red-700 transition text-base font-medium\",\n          children: \"Stop Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-lg font-semibold text-gray-800\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), accuracy !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg\",\n          children: [\"Pronunciation Accuracy: \", accuracy, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), accuracy === 100 ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n          size: 30,\n          className: \"text-green-500 mt-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(XCircle, {\n          size: 30,\n          className: \"text-red-500 mt-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/microphone'),\n          className: \"text-sm text-blue-500 underline\",\n          children: \"\\u2190 Back to Exercises\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(PracticeExercise, \"5HcUikZB3Wqhv4ATlfwbzgnlt3Q=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PracticeExercise;\nexport default PracticeExercise;\nvar _c;\n$RefreshReg$(_c, \"PracticeExercise\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","Mic","CheckCircle","XCircle","jsxDEV","_jsxDEV","exercises","title","targetWords","PracticeExercise","_s","id","navigate","exercise","message","setMessage","isListening","setIsListening","isRecording","setIsRecording","accuracy","setAccuracy","recordTime","setRecordTime","handleListen","SpeechRecognition","window","webkitSpeechRecognition","alert","recognition","lang","interimResults","maxAlternatives","startTime","Date","now","onstart","onresult","event","transcript","results","toLowerCase","trim","length","res","fetch","method","headers","body","JSON","stringify","data","json","feedback","reply","correct","some","word","includes","percentage","utter","SpeechSynthesisUtterance","speechSynthesis","speak","err","console","error","onerror","onend","start","handleStop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","disabled","size","_c","$RefreshReg$"],"sources":["/Users/lucasmiles/Desktop/Final1/complete-speech-ai-app/src/components/PracticeExercise.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Mic, CheckCircle, XCircle } from 'lucide-react';\n\nconst exercises = {\n  1: { title: 'S Sound Practice', targetWords: ['Snake', 'Sun', 'Smile'] },\n  2: { title: 'R Sound Practice', targetWords: ['Rabbit', 'Red', 'Round'] },\n  3: { title: 'Tongue Strengthening', targetWords: ['Up', 'Down', 'Side'] },\n  4: { title: 'Lip Closure Drill', targetWords: ['Pa', 'Ba', 'Ma'] },\n  5: { title: 'Breath Support Training', targetWords: ['Ahh', 'Oh', 'Eee'] },\n  6: { title: 'Ch Sound Practice', targetWords: ['Chair', 'Cheese', 'Chalk'] },\n  7: { title: 'Th Sound Clarity', targetWords: ['This', 'Think'] },\n  8: { title: 'Z Sound Emphasis', targetWords: ['Zebra', 'Zoom', 'Buzz'] },\n  9: { title: 'Sentence Repetition', targetWords: ['I can see the sun.'] },\n  10: { title: 'Minimal Pairs Drill', targetWords: ['Bat', 'Pat', 'Cap', 'Cab'] },\n};\n\nconst PracticeExercise = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const exercise = exercises[id];\n\n  const [message, setMessage] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [accuracy, setAccuracy] = useState(null);\n  const [recordTime, setRecordTime] = useState(0);\n\n  const handleListen = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert('Speech recognition not supported in this browser.');\n      return;\n    }\n\n    const recognition = new SpeechRecognition();\n    recognition.lang = 'en-US';\n    recognition.interimResults = false;\n    recognition.maxAlternatives = 1;\n\n    // Start time recording\n    const startTime = Date.now();\n\n    recognition.onstart = () => {\n      setIsRecording(true);\n      setMessage('');\n      setAccuracy(null);\n      setRecordTime(0);\n    };\n\n    recognition.onresult = async (event) => {\n      const transcript = event.results[0][0].transcript.toLowerCase();\n\n      // Ensure that the transcript is not empty or null\n      if (!transcript || transcript.trim().length === 0) {\n        setMessage('⚠️ No speech detected. Please try again.');\n        return;\n      }\n\n      try {\n        const res = await fetch('http://localhost:5001/chat', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ message: transcript }),\n        });\n\n        const data = await res.json();\n        const feedback = data.reply;\n\n        setMessage(feedback);\n\n        // Simple accuracy check: comparison of words (real implementation would involve more advanced logic)\n        const correct = exercise.targetWords.some((word) => transcript.includes(word.toLowerCase()));\n        const percentage = correct ? 100 : 0; // Placeholder, you can improve this logic with NLP or other methods\n\n        setAccuracy(percentage);\n\n        // Speak feedback out loud (only if correct or try again)\n        const utter = new SpeechSynthesisUtterance(correct ? \"Correct pronunciation!\" : \"Try again.\");\n        utter.lang = 'en-US';\n        window.speechSynthesis.speak(utter);\n\n      } catch (err) {\n        console.error('AI error:', err);\n        setMessage('⚠️ Something went wrong. Please try again.');\n      }\n    };\n\n    recognition.onerror = (event) => {\n      setMessage('⚠️ Error occurred: ' + event.error);\n    };\n\n    recognition.onend = () => {\n      setIsRecording(false);\n      setRecordTime((Date.now() - startTime) / 1000); // Calculate total recording time\n    };\n\n    recognition.start();\n  };\n\n  const handleStop = () => {\n    setIsRecording(false);\n    setMessage('Recording stopped.');\n  };\n\n  if (!exercise) return <p className=\"text-center text-red-500 mt-10\">Exercise not found.</p>;\n\n  return (\n    <div className=\"bg-gray-100 min-h-[calc(100vh-64px)] flex items-center justify-center px-4 py-10\">\n      <div className=\"bg-white p-10 rounded-3xl shadow-lg w-full max-w-2xl text-center space-y-6\">\n        <h2 className=\"text-3xl font-bold text-blue-600\">{exercise.title}</h2>\n        <p className=\"text-gray-700 text-lg\">Try saying one of the following words:</p>\n\n        <div className=\"flex flex-wrap justify-center gap-4\">\n          {exercise.targetWords.map((word, index) => (\n            <span\n              key={index}\n              className=\"bg-yellow-100 text-yellow-800 px-5 py-2 rounded-full text-base font-medium\"\n            >\n              {word}\n            </span>\n          ))}\n        </div>\n\n        <div className=\"flex justify-center gap-4\">\n          <button\n            onClick={handleListen}\n            disabled={isRecording || isListening}\n            className=\"flex items-center gap-2 bg-blue-600 text-white px-6 py-3 rounded-xl hover:bg-blue-700 transition text-base font-medium\"\n          >\n            <Mic size={20} />\n            {isRecording ? 'Recording...' : 'Start Speaking'}\n          </button>\n\n          {isRecording && (\n            <button\n              onClick={handleStop}\n              className=\"bg-red-600 text-white px-6 py-3 rounded-xl hover:bg-red-700 transition text-base font-medium\"\n            >\n              Stop Recording\n            </button>\n          )}\n        </div>\n\n        {message && (\n          <div className=\"text-lg font-semibold text-gray-800\">{message}</div>\n        )}\n\n        {accuracy !== null && (\n          <div className=\"mt-4\">\n            <p className=\"text-lg\">Pronunciation Accuracy: {accuracy}%</p>\n            {accuracy === 100 ? (\n              <CheckCircle size={30} className=\"text-green-500 mt-2\" />\n            ) : (\n              <XCircle size={30} className=\"text-red-500 mt-2\" />\n            )}\n          </div>\n        )}\n\n        <div>\n          <button\n            onClick={() => navigate('/microphone')}\n            className=\"text-sm text-blue-500 underline\"\n          >\n            ← Back to Exercises\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PracticeExercise;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}